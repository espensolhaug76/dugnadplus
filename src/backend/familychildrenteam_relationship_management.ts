```sql
-- SQL Table Creation Statements

CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  email TEXT NOT NULL,
  hashed_password TEXT NOT NULL,
  role TEXT NOT NULL CHECK(role IN ('coach', 'coordinator', 'parent'))
);

CREATE TABLE children (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  parent_id UUID REFERENCES users(id)
);

CREATE TABLE teams (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  coach_id UUID REFERENCES users(id)
);

CREATE TABLE team_members (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  team_id UUID REFERENCES teams(id),
  child_id UUID REFERENCES children(id)
);

-- Remember to grant necessary permissions to these tables using GRANT command
```

```typescript
// TypeScript Functions and API Endpoints

const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = 'YOUR_SUPABASE_URL'
const supabaseKey = 'YOUR_SUPABASE_KEY'
const supabase = createClient(supabaseUrl, supabaseKey)

// Add a new user
app.post('/addUser', async (req, res) => {
  const { email, password, role } = req.body;
  const { error } = await supabase.from('users').insert([{ email, hashed_password: password, role }]);
  if (error) return res.status(500).json({ error: error.message });
  res.status(200).json({ message: 'User added successfully' });
});

// Add a new child
app.post('/addChild', async (req, res) => {
  const { name, parent_id } = req.body;
  const { error } = await supabase.from('children').insert([{ name, parent_id }]);
  if (error) return res.status(500).json({ error: error.message });
  res.status(200).json({ message: 'Child added successfully' });
});

// Add a new team
app.post('/addTeam', async (req, res) => {
  const { name, coach_id } = req.body;
  const { error } = await supabase.from('teams').insert([{ name, coach_id }]);
  if (error) return res.status(500).json({ error: error.message });
  res.status(200).json({ message: 'Team added successfully' });
});

// Assign a child to a team
app.post('/assignChildToTeam', async (req, res) => {
  const { team_id, child_id } = req.body;
  const { error } = await supabase.from('team_members').insert([{ team_id, child_id }]);
  if (error) return res.status(500).json({ error: error.message });
  res.status(200).json({ message: 'Child assigned to team successfully' });
});

// Handle other business logics and endpoints similarly
```

Remember to handle necessary input validations and security checks according to the Norwegian business logic and standards.